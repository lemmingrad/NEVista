#ifndef _TCPACCEPTOR_H_
#define _TCPACCEPTOR_H_
#pragma once

//----------------------------------------------------------//
// TCPACCEPTOR.H
//----------------------------------------------------------//
//-- Description			
// Establishes a TCP listener on a sevrer end, handles new
// incoming connection.
//----------------------------------------------------------//


#include "Types.h"
#include "Network.h"


//----------------------------------------------------------//
// DEFINES
//----------------------------------------------------------//

//----------------------------------------------------------//
// ENUMS
//----------------------------------------------------------//

//----------------------------------------------------------//
// FORWARD REFERENCES
//----------------------------------------------------------//


class CTCPConnection;


//----------------------------------------------------------//
// STRUCTS
//----------------------------------------------------------//

//----------------------------------------------------------//
// CLASSES
//----------------------------------------------------------//


class CTCPAcceptor
{
	public:

		struct Error
		{
			enum Enum
			{
				GetInfoFail				= 0x80000000,
				OpenFail				= 0x80000001,
				SetReusableFail			= 0x80000002,
				BindFail				= 0x80000003,
				ListenFail				= 0x80000004,

				BadFail					= -1,

				//-- Success
				Ok						= 0
			};
		};

		struct Result
		{
			Result()
			: m_eError(Error::Ok)
			, m_pConnection(NULL)
			{
			}

			Error::Enum				m_eError;
			CTCPConnection*			m_pConnection;
		};


		CTCPAcceptor();
		~CTCPAcceptor();

		Result						Listen(void);
		Result						Accept(void);

	private:

};


//----------------------------------------------------------//
// EXTERNALS
//----------------------------------------------------------//

//----------------------------------------------------------//
// EOF
//----------------------------------------------------------//

#endif //_TCPACCEPTOR_H_